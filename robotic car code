from machine import Pin, PWM
import utime

# Motor pins
ENA = PWM(Pin(16))
IN1 = Pin(17, Pin.OUT)
IN2 = Pin(18, Pin.OUT)
ENB = PWM(Pin(19))
IN3 = Pin(20, Pin.OUT)
IN4 = Pin(21, Pin.OUT)

ENA.freq(1000)
ENB.freq(1000)

# IR sensors
left_ir = Pin(26, Pin.IN)
right_ir = Pin(27, Pin.IN)

# Ultrasonic sensor
trig = Pin(3, Pin.OUT)
echo = Pin(2, Pin.IN)

def set_motor(left_forward, right_forward, speed=50000):
    if left_forward:
        IN1.value(1); IN2.value(0)
    else:
        IN1.value(0); IN2.value(1)

    if right_forward:
        IN3.value(1); IN4.value(0)
    else:
        IN3.value(0); IN4.value(1)

    ENA.duty_u16(speed)
    ENB.duty_u16(speed)

def stop():
    ENA.duty_u16(0)
    ENB.duty_u16(0)

def get_distance():
    trig.low()
    utime.sleep_us(2)
    trig.high()
    utime.sleep_us(5)
    trig.low()

    while echo.value() == 0:
        signaloff = utime.ticks_us()
    while echo.value() == 1:
        signalon = utime.ticks_us()

    return (signalon - signaloff) * 0.0343 / 2

while True:
    distance = get_distance()
    if distance < 15:  # Obstacle detected
        stop()
        utime.sleep(0.5)
        set_motor(False, False)  # Reverse
        utime.sleep(1)
        set_motor(True, False)   # Turn left
        utime.sleep(1)
        stop()
    else:
        if left_ir.value() == 0 and right_ir.value() == 0:
            set_motor(True, True)  # Forward
        elif left_ir.value() == 0:
            set_motor(False, True) # Turn left
        elif right_ir.value() == 0:
            set_motor(True, False) # Turn right
        else:
            stop()
